Unable to find image 'alpine/dfimage:latest' locally
latest: Pulling from alpine/dfimage
df20fa9351a1: Pull complete 
820dbffe2156: Pull complete 
Digest: sha256:4a271e763d51b7f3cca72eac9bf508502c032665dde0e4c8d5fcf6376600f64a
Status: Downloaded newer image for alpine/dfimage:latest
Analyzing wordpress:4.8-apache
Docker Version: 17.06.2-ce
GraphDriver: overlay2
Environment Variables
|PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
|PHPIZE_DEPS=autoconf           dpkg-dev                file            g++             gcc             libc-dev                libpcre3-dev          make            pkg-config              re2c
|PHP_INI_DIR=/usr/local/etc/php
|APACHE_CONFDIR=/etc/apache2
|APACHE_ENVVARS=/etc/apache2/envvars
|PHP_EXTRA_BUILD_DEPS=apache2-dev
|PHP_EXTRA_CONFIGURE_ARGS=--with-apxs2
|PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2
|PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2
|PHP_LDFLAGS=-Wl,-O1 -Wl,--hash-style=both -pie
|GPG_KEYS=0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3
|PHP_VERSION=5.6.32
|PHP_URL=https://secure.php.net/get/php-5.6.32.tar.xz/from/this/mirror
|PHP_ASC_URL=https://secure.php.net/get/php-5.6.32.tar.xz.asc/from/this/mirror
|PHP_SHA256=8c2b4f721c7475fb9eabda2495209e91ea933082e6f34299d11cba88cd76e64b
|PHP_MD5=
|WORDPRESS_VERSION=4.8.3
|WORDPRESS_SHA1=8efc0b9f6146e143ed419b5419d7bb8400a696fc

Open Ports
|80

Image user
|User is root

Potential secrets:
|Found match usr/src/php.tar.xz.asc Potential cryptographic key bundle \.asc$ 9b9c801b3f601a3d7b03df2ef109279305ca89817b0d17de216ff72b371f82b5/layer.tar
|Found match usr/src/wordpress/wp-admin/setup-config.php PHP configuration file \A(.*)?config(\.inc)?\.php\z efc1068a82ff61d622041f1a5e6fba469a1e5ed49ba8608f6d1e839de0c206fb/layer.tar
|Found match usr/src/wordpress/wp-config-sample.php Wordpress configuration file wp-config[\s\S]*.php efc1068a82ff61d622041f1a5e6fba469a1e5ed49ba8608f6d1e839de0c206fb/layer.tar
|Found match usr/src/wordpress/wp-content/plugins/akismet/.htaccess apache/nginx htaccess efc1068a82ff61d622041f1a5e6fba469a1e5ed49ba8608f6d1e839de0c206fb/layer.tar
|Found match usr/src/wordpress/wp-content/plugins/akismet/views/config.php PHP configuration file \A(.*)?config(\.inc)?\.php\z efc1068a82ff61d622041f1a5e6fba469a1e5ed49ba8608f6d1e839de0c206fb/layer.tar
Dockerfile:
CMD ["bash"]
ENV PHPIZE_DEPS=autoconf dpkg-dev file g++ gcc libc-dev libpcre3-dev make pkg-config re2c
RUN apt-get update  \
        && apt-get install -y $PHPIZE_DEPS ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils --no-install-recommends  \
        && rm -r /var/lib/apt/lists/*
ENV PHP_INI_DIR=/usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d
RUN apt-get update  \
        && apt-get install -y --no-install-recommends apache2  \
        && rm -rf /var/lib/apt/lists/*
ENV APACHE_CONFDIR=/etc/apache2
ENV APACHE_ENVVARS=/etc/apache2/envvars
RUN set -ex  \
        && sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"  \
        && . "$APACHE_ENVVARS"  \
        && for dir in "$APACHE_LOCK_DIR" "$APACHE_RUN_DIR" "$APACHE_LOG_DIR" /var/www/html ; do rm -rvf "$dir"  \
        && mkdir -p "$dir"  \
        && chown -R "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"; done
RUN a2dismod mpm_event  \
        && a2enmod mpm_prefork
RUN set -ex  \
        && . "$APACHE_ENVVARS"  \
        && ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"  \
        && ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"  \
        && ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"
RUN { echo '<FilesMatch \.php$>'; echo '\tSetHandler application/x-httpd-php'; echo '</FilesMatch>'; echo; echo 'DirectoryIndex disabled'; echo 'DirectoryIndex index.php index.html'; echo; echo '<Directory /var/www/>'; echo '\tOptions -Indexes'; echo '\tAllowOverride All'; echo '</Directory>'; } | tee "$APACHE_CONFDIR/conf-available/docker-php.conf"  \
        && a2enconf docker-php
ENV PHP_EXTRA_BUILD_DEPS=apache2-dev
ENV PHP_EXTRA_CONFIGURE_ARGS=--with-apxs2
ENV PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2
ENV PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2
ENV PHP_LDFLAGS=-Wl,-O1 -Wl,--hash-style=both -pie
ENV GPG_KEYS=0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3
ENV PHP_VERSION=5.6.32
ENV PHP_URL=https://secure.php.net/get/php-5.6.32.tar.xz/from/this/mirror PHP_ASC_URL=https://secure.php.net/get/php-5.6.32.tar.xz.asc/from/this/mirror
ENV PHP_SHA256=8c2b4f721c7475fb9eabda2495209e91ea933082e6f34299d11cba88cd76e64b PHP_MD5=
RUN set -xe; fetchDeps=' wget '; if ! command -v gpg > /dev/null; then fetchDeps="$fetchDeps dirmngr gnupg "; fi; apt-get update; apt-get install -y --no-install-recommends $fetchDeps; rm -rf /var/lib/apt/lists/*; mkdir -p /usr/src; cd /usr/src; wget -O php.tar.xz "$PHP_URL"; if [ -n "$PHP_SHA256" ]; then echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -; fi; if [ -n "$PHP_MD5" ]; then echo "$PHP_MD5 *php.tar.xz" | md5sum -c -; fi; if [ -n "$PHP_ASC_URL" ]; then wget -O php.tar.xz.asc "$PHP_ASC_URL"; export GNUPGHOME="$(mktemp -d)"; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; done; gpg --batch --verify php.tar.xz.asc php.tar.xz; rm -rf "$GNUPGHOME"; fi; apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps
COPY file:207c686e3fed4f71f8a7b245d8dcae9c9048d276a326d82b553c12a90af0c0ca in /usr/local/bin/
        usr/
        usr/local/
        usr/local/bin/
        usr/local/bin/docker-php-source

RUN set -xe  \
        && buildDeps=" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev zlib1g-dev "  \
        && apt-get update  \
        && apt-get install -y $buildDeps --no-install-recommends  \
        && rm -rf /var/lib/apt/lists/*  \
        && export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS"  \
        && docker-php-source extract  \
        && cd /usr/src/php  \
        && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"  \
        && debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"  \
        && if [ ! -d /usr/include/curl ]; then ln -sT "/usr/include/$debMultiarch/curl" /usr/local/include/curl; fi  \
        && ./configure --build="$gnuArch" --with-config-file-path="$PHP_INI_DIR" --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib --with-pcre-regex=/usr --with-libdir="lib/$debMultiarch" $PHP_EXTRA_CONFIGURE_ARGS  \
        && make -j "$(nproc)"  \
        && make install  \
        && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; }  \
        && make clean  \
        && cd /  \
        && docker-php-source delete  \
        && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps  \
        && pecl update-channels  \
        && rm -rf /tmp/pear ~/.pearrc
COPY multi:dbabcc0b81566a75f49e7faa9ca5f96cd22a515b80ee7ea1e34fceceee3f9c2a in /usr/local/bin/
        usr/
        usr/local/
        usr/local/bin/
        usr/local/bin/docker-php-entrypoint
        usr/local/bin/docker-php-ext-configure
        usr/local/bin/docker-php-ext-enable
        usr/local/bin/docker-php-ext-install

ENTRYPOINT ["docker-php-entrypoint"]
COPY file:24613ecbb1ce6a09f683b0753da9c26a1af07547326e8a02f6eec80ad6f2774a in /usr/local/bin/
        usr/
        usr/local/
        usr/local/bin/
        usr/local/bin/apache2-foreground

WORKDIR /var/www/html
EXPOSE 80/tcp
CMD ["apache2-foreground"]
RUN set -ex; apt-get update; apt-get install -y libjpeg-dev libpng-dev ; rm -rf /var/lib/apt/lists/*; docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; docker-php-ext-install gd mysqli opcache
RUN { echo 'opcache.memory_consumption=128'; echo 'opcache.interned_strings_buffer=8'; echo 'opcache.max_accelerated_files=4000'; echo 'opcache.revalidate_freq=2'; echo 'opcache.fast_shutdown=1'; echo 'opcache.enable_cli=1'; } > /usr/local/etc/php/conf.d/opcache-recommended.ini
RUN a2enmod rewrite expires
VOLUME [/var/www/html]
ENV WORDPRESS_VERSION=4.8.3
ENV WORDPRESS_SHA1=8efc0b9f6146e143ed419b5419d7bb8400a696fc
RUN set -ex; curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"; echo "$WORDPRESS_SHA1 *wordpress.tar.gz" | sha1sum -c -; tar -xzf wordpress.tar.gz -C /usr/src/; rm wordpress.tar.gz; chown -R www-data:www-data /usr/src/wordpress
COPY file:db1f48c4963a4352b4c31c18f102b71fcc06a1266db6edd17f8f52458fe13130 in /usr/local/bin/
        usr/
        usr/local/
        usr/local/bin/
        usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["apache2-foreground"]

